// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$location-name: 'location';
$location-x: 151px;
$location-y: 60px;
$location-offset-x: -151px;
$location-offset-y: -60px;
$location-width: 15px;
$location-height: 20px;
$location-total-width: 211px;
$location-total-height: 141px;
$location-image: '/assets/template/css/sprites/sprite.png';
$location: (151px, 60px, -151px, -60px, 15px, 20px, 211px, 141px, '/assets/template/css/sprites/sprite.png', 'location', );
$peak-up-gray-name: 'peak-up-gray';
$peak-up-gray-x: 0px;
$peak-up-gray-y: 0px;
$peak-up-gray-offset-x: 0px;
$peak-up-gray-offset-y: 0px;
$peak-up-gray-width: 151px;
$peak-up-gray-height: 97px;
$peak-up-gray-total-width: 211px;
$peak-up-gray-total-height: 141px;
$peak-up-gray-image: '/assets/template/css/sprites/sprite.png';
$peak-up-gray: (0px, 0px, 0px, 0px, 151px, 97px, 211px, 141px, '/assets/template/css/sprites/sprite.png', 'peak-up-gray', );
$wiki-name: 'wiki';
$wiki-x: 151px;
$wiki-y: 0px;
$wiki-offset-x: -151px;
$wiki-offset-y: 0px;
$wiki-width: 60px;
$wiki-height: 60px;
$wiki-total-width: 211px;
$wiki-total-height: 141px;
$wiki-image: '/assets/template/css/sprites/sprite.png';
$wiki: (151px, 0px, -151px, 0px, 60px, 60px, 211px, 141px, '/assets/template/css/sprites/sprite.png', 'wiki', );
$zvonokh-name: 'zvonokh';
$zvonokh-x: 0px;
$zvonokh-y: 97px;
$zvonokh-offset-x: 0px;
$zvonokh-offset-y: -97px;
$zvonokh-width: 44px;
$zvonokh-height: 44px;
$zvonokh-total-width: 211px;
$zvonokh-total-height: 141px;
$zvonokh-image: '/assets/template/css/sprites/sprite.png';
$zvonokh: (0px, 97px, 0px, -97px, 44px, 44px, 211px, 141px, '/assets/template/css/sprites/sprite.png', 'zvonokh', );
$spritesheet-width: 211px;
$spritesheet-height: 141px;
$spritesheet-image: '/assets/template/css/sprites/sprite.png';
$spritesheet-sprites: ($location, $peak-up-gray, $wiki, $zvonokh, );
$spritesheet: (211px, 141px, '/assets/template/css/sprites/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
